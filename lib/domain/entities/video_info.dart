import 'package:equatable/equatable.dart';

class VideoInfo extends Equatable {
  final String id;
  final String title;
  final String description;
  final Duration duration;
  final String channelName;
  final String channelId;
  final String thumbnailUrl;
  final String? uploadDate;
  final int? viewCount;
  final int? likeCount;
  final List<VideoStream> videoStreams;
  final List<AudioStream> audioStreams;
  final List<SubtitleInfo> subtitles;
  final bool isPrivate;
  final bool isAgeRestricted;
  final bool isRegionBlocked;

  const VideoInfo({
    required this.id,
    required this.title,
    required this.description,
    required this.duration,
    required this.channelName,
    required this.channelId,
    required this.thumbnailUrl,
    this.uploadDate,
    this.viewCount,
    this.likeCount,
    required this.videoStreams,
    required this.audioStreams,
    required this.subtitles,
    this.isPrivate = false,
    this.isAgeRestricted = false,
    this.isRegionBlocked = false,
  });

  @override
  List<Object?> get props => [
    id,
    title,
    description,
    duration,
    channelName,
    channelId,
    thumbnailUrl,
    uploadDate,
    viewCount,
    likeCount,
    videoStreams,
    audioStreams,
    subtitles,
    isPrivate,
    isAgeRestricted,
    isRegionBlocked,
  ];

  /// Validates if the provided URL is a valid YouTube URL
  static bool isValidUrl(String url) {
    final youtubeRegex = RegExp(
      r'^(https?://)?(www\.)?(youtube\.com|youtu\.be)/.+$',
      caseSensitive: false,
    );
    return youtubeRegex.hasMatch(url);
  }
}

class VideoStream extends Equatable {
  final String url;
  final String format;
  final String quality;
  final int width;
  final int height;
  final int bitrate;
  final int fileSize;
  final String codec;

  const VideoStream({
    required this.url,
    required this.format,
    required this.quality,
    required this.width,
    required this.height,
    required this.bitrate,
    required this.fileSize,
    required this.codec,
  });

  @override
  List<Object?> get props => [
    url,
    format,
    quality,
    width,
    height,
    bitrate,
    fileSize,
    codec,
  ];
}

class AudioStream extends Equatable {
  final String url;
  final String format;
  final int bitrate;
  final int fileSize;
  final String codec;

  const AudioStream({
    required this.url,
    required this.format,
    required this.bitrate,
    required this.fileSize,
    required this.codec,
  });

  @override
  List<Object?> get props => [url, format, bitrate, fileSize, codec];
}

class SubtitleInfo extends Equatable {
  final String languageCode;
  final String languageName;
  final String url;
  final bool isAutoGenerated;

  const SubtitleInfo({
    required this.languageCode,
    required this.languageName,
    required this.url,
    this.isAutoGenerated = false,
  });

  @override
  List<Object?> get props => [languageCode, languageName, url, isAutoGenerated];
}
